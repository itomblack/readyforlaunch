{"ast":null,"code":"var _jsxFileName = \"/Users/ianblack/Repos/ContentfulBlog/src/component/BlogPreviewItem.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport * as Markdown from 'react-markdown';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BlogPreviewItem = props => {\n  _s();\n\n  let match = useRouteMatch();\n  let maxCharInPreview = 36;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Markdown, {\n        source: props.content.split(\" \").splice(0, maxCharInPreview).join(\" \").concat('...')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"level\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"level-left\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"level-item button is-small is-link is-outlined\",\n          to: {\n            pathname: `${match.url}/${props.path}`,\n            ...props\n          },\n          children: \"Read More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"level-right\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"level-item has-text-link is-size-7\",\n          children: moment(props.date).calendar(null, {\n            sameDay: '[Today]',\n            lastDay: '[Yesterday]',\n            lastWeek: '[Last] dddd',\n            sameElse: 'MMM Do YYYY'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(BlogPreviewItem, \"zx5nH/hVPZnBbaV+fF3J0tuE528=\", false, function () {\n  return [useRouteMatch];\n});\n\n_c = BlogPreviewItem;\nexport default BlogPreviewItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogPreviewItem\");","map":{"version":3,"sources":["/Users/ianblack/Repos/ContentfulBlog/src/component/BlogPreviewItem.js"],"names":["React","Link","useRouteMatch","Markdown","moment","BlogPreviewItem","props","match","maxCharInPreview","title","content","split","splice","join","concat","pathname","url","path","date","calendar","sameDay","lastDay","lastWeek","sameElse"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,aAAf,QAAoC,kBAApC;AACA,OAAO,KAAKC,QAAZ,MAA0B,gBAA1B;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AACjC,MAAIC,KAAK,GAAGL,aAAa,EAAzB;AACA,MAAIM,gBAAgB,GAAG,EAAvB;AACA,sBACE;AAAA,4BACE;AAAA,8BACE;AAAA,kBAAKF,KAAK,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AACE,QAAA,MAAM,EACJH,KAAK,CAACI,OAAN,CAAcC,KAAd,CAAoB,GAApB,EAAyBC,MAAzB,CAAgC,CAAhC,EAAkCJ,gBAAlC,EAAoDK,IAApD,CAAyD,GAAzD,EAA8DC,MAA9D,CAAqE,KAArE;AAFJ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE,QAAC,IAAD;AACI,UAAA,SAAS,EAAC,gDADd;AAEI,UAAA,EAAE,EAAE;AAAEC,YAAAA,QAAQ,EAAG,GAAER,KAAK,CAACS,GAAI,IAAGV,KAAK,CAACW,IAAK,EAAvC;AAA0C,eAAGX;AAA7C,WAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADJ,eAQE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE;AAAG,UAAA,SAAS,EAAC,oCAAb;AAAA,oBACCF,MAAM,CAACE,KAAK,CAACY,IAAP,CAAN,CAAmBC,QAAnB,CAA4B,IAA5B,EAAkC;AAC/BC,YAAAA,OAAO,EAAE,SADsB;AAE/BC,YAAAA,OAAO,EAAE,aAFsB;AAG/BC,YAAAA,QAAQ,EAAE,aAHqB;AAI/BC,YAAAA,QAAQ,EAAE;AAJqB,WAAlC;AADD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA,kBADF;AA+BD,CAlCD;;GAAMlB,e;UACQH,a;;;KADRG,e;AAoCN,eAAeA,eAAf","sourcesContent":["import React from 'react'\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport * as Markdown from 'react-markdown'\nimport moment from 'moment'\n\nconst BlogPreviewItem = (props) => {\n  let match = useRouteMatch();\n  let maxCharInPreview = 36;\n  return (\n    <>\n      <div>\n        <h2>{props.title}</h2>\n        <Markdown\n          source={\n            props.content.split(\" \").splice(0,maxCharInPreview).join(\" \").concat('...')\n          }\n        />\n      </div>\n      <div className=\"level\">\n          <div className=\"level-left\">\n            <Link\n                className=\"level-item button is-small is-link is-outlined\"\n                to={{ pathname: `${match.url}/${props.path}`, ...props }}>\n              Read More\n            </Link>\n          </div>\n        <div className=\"level-right\">\n          <p className=\"level-item has-text-link is-size-7\">\n          {moment(props.date).calendar(null, {\n              sameDay: '[Today]',\n              lastDay: '[Yesterday]',\n              lastWeek: '[Last] dddd',\n              sameElse: 'MMM Do YYYY'\n            })}\n          </p>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default BlogPreviewItem\n"]},"metadata":{},"sourceType":"module"}