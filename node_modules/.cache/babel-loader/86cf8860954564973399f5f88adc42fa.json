{"ast":null,"code":"var _jsxFileName = \"/Users/ianblack/Repos/ContentfulBlog/src/component/BlogPost.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport * as Markdown from 'react-markdown';\nimport ContentfulUtil from '../utils/ContentfulUtil';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass BlogPost extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      date: \"\",\n      title: \"\",\n      featuredImage: \"\",\n      content: \"\"\n    };\n\n    this.setPost = post => {\n      if (post && post.items.length) {\n        this.setState({\n          date: post.items[0].fields.date,\n          title: post.items[0].fields.title,\n          featuredImage: post.items[0].fields.featuredImage,\n          content: post.items[0].fields.content\n        });\n      }\n    };\n\n    this.isBlogPostInProps = () => this.props && this.props.location && this.props.location.date && this.props.location.title && this.props.location.featuredImage && this.props.location.content;\n\n    this.renderBlogPost = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/blog\",\n        children: \"Back to Blog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: moment(this.state.date).calendar(null, {\n          sameDay: '[Today]',\n          lastDay: '[Yesterday]',\n          lastWeek: '[Last] dddd',\n          sameElse: 'MMM Do YYYY'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), this.state.featuredImage && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"featuredImage\",\n        src: this.state.featuredImage.fields.file.url + '?w=300&h=300',\n        alt: this.state.title,\n        title: this.state.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: this.state.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Markdown, {\n        source: this.state.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n\n    this.render = () => {\n      return this.renderBlogPost();\n    };\n  }\n\n  componentDidMount() {\n    if (this.isBlogPostInProps()) {\n      this.setState({\n        date: this.props.location.date,\n        title: this.props.location.title,\n        featuredImage: this.props.location.featuredImage,\n        content: this.props.location.content\n      });\n    } else {\n      ContentfulUtil.fetchPostByPathName(this.props.match.params.blogPost).then(response => this.setPost(response));\n    }\n  }\n\n}\n\nexport default BlogPost;","map":{"version":3,"sources":["/Users/ianblack/Repos/ContentfulBlog/src/component/BlogPost.js"],"names":["React","Link","moment","Markdown","ContentfulUtil","BlogPost","Component","state","date","title","featuredImage","content","setPost","post","items","length","setState","fields","isBlogPostInProps","props","location","renderBlogPost","calendar","sameDay","lastDay","lastWeek","sameElse","file","url","render","componentDidMount","fetchPostByPathName","match","params","blogPost","then","response"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,KAAKC,QAAZ,MAA0B,gBAA1B;AACA,OAAOC,cAAP,MAA2B,yBAA3B;;;;AAEA,MAAMC,QAAN,SAAuBL,KAAK,CAACM,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,aAAa,EAAE,EAHT;AAINC,MAAAA,OAAO,EAAE;AAJH,KAD6B;;AAAA,SAQrCC,OARqC,GAQ3BC,IAAI,IAAI;AAChB,UAAIA,IAAI,IAAIA,IAAI,CAACC,KAAL,CAAWC,MAAvB,EAA+B;AAC7B,aAAKC,QAAL,CAAc;AACZR,UAAAA,IAAI,EAAEK,IAAI,CAACC,KAAL,CAAW,CAAX,EAAcG,MAAd,CAAqBT,IADf;AAEZC,UAAAA,KAAK,EAAEI,IAAI,CAACC,KAAL,CAAW,CAAX,EAAcG,MAAd,CAAqBR,KAFhB;AAGZC,UAAAA,aAAa,EAAEG,IAAI,CAACC,KAAL,CAAW,CAAX,EAAcG,MAAd,CAAqBP,aAHxB;AAIZC,UAAAA,OAAO,EAAEE,IAAI,CAACC,KAAL,CAAW,CAAX,EAAcG,MAAd,CAAqBN;AAJlB,SAAd;AAMD;AACF,KAjBoC;;AAAA,SAiCrCO,iBAjCqC,GAiCjB,MAChB,KAAKC,KAAL,IACA,KAAKA,KAAL,CAAWC,QADX,IAEA,KAAKD,KAAL,CAAWC,QAAX,CAAoBZ,IAFpB,IAGA,KAAKW,KAAL,CAAWC,QAAX,CAAoBX,KAHpB,IAIA,KAAKU,KAAL,CAAWC,QAAX,CAAoBV,aAJpB,IAKA,KAAKS,KAAL,CAAWC,QAAX,CAAoBT,OAvCa;;AAAA,SA0CrCU,cA1CqC,GA0CpB,mBACf;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBACGnB,MAAM,CAAC,KAAKK,KAAL,CAAWC,IAAZ,CAAN,CAAwBc,QAAxB,CAAiC,IAAjC,EAAuC;AACtCC,UAAAA,OAAO,EAAE,SAD6B;AAEtCC,UAAAA,OAAO,EAAE,aAF6B;AAGtCC,UAAAA,QAAQ,EAAE,aAH4B;AAItCC,UAAAA,QAAQ,EAAE;AAJ4B,SAAvC;AADH;AAAA;AAAA;AAAA;AAAA,cAFF,EAUG,KAAKnB,KAAL,CAAWG,aAAX,iBAA4B;AAAK,QAAA,SAAS,EAAC,eAAf;AAA+B,QAAA,GAAG,EAAE,KAAKH,KAAL,CAAWG,aAAX,CAAyBO,MAAzB,CAAgCU,IAAhC,CAAqCC,GAArC,GAA2C,cAA/E;AAA+F,QAAA,GAAG,EAAE,KAAKrB,KAAL,CAAWE,KAA/G;AAAsH,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE;AAAxI;AAAA;AAAA;AAAA;AAAA,cAV/B,eAWE;AAAA,kBAAK,KAAKF,KAAL,CAAWE;AAAhB;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE,QAAC,QAAD;AAAU,QAAA,MAAM,EAAE,KAAKF,KAAL,CAAWI;AAA7B;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA,oBA3CmC;;AAAA,SA2DrCkB,MA3DqC,GA2D5B,MAAM;AACb,aAAO,KAAKR,cAAL,EAAP;AACD,KA7DoC;AAAA;;AAmBrCS,EAAAA,iBAAiB,GAAG;AAClB,QAAI,KAAKZ,iBAAL,EAAJ,EAA8B;AAC5B,WAAKF,QAAL,CAAc;AACZR,QAAAA,IAAI,EAAE,KAAKW,KAAL,CAAWC,QAAX,CAAoBZ,IADd;AAEZC,QAAAA,KAAK,EAAE,KAAKU,KAAL,CAAWC,QAAX,CAAoBX,KAFf;AAGZC,QAAAA,aAAa,EAAE,KAAKS,KAAL,CAAWC,QAAX,CAAoBV,aAHvB;AAIZC,QAAAA,OAAO,EAAE,KAAKQ,KAAL,CAAWC,QAAX,CAAoBT;AAJjB,OAAd;AAMD,KAPD,MAOO;AACLP,MAAAA,cAAc,CAAC2B,mBAAf,CAAmC,KAAKZ,KAAL,CAAWa,KAAX,CAAiBC,MAAjB,CAAwBC,QAA3D,EACKC,IADL,CACWC,QAAD,IAAc,KAAKxB,OAAL,CAAawB,QAAb,CADxB;AAED;AACF;;AA/BoC;;AAgEvC,eAAe/B,QAAf","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\nimport * as Markdown from 'react-markdown'\nimport ContentfulUtil from '../utils/ContentfulUtil'\n\nclass BlogPost extends React.Component {\n  state = {\n    date: \"\",\n    title: \"\",\n    featuredImage: \"\",\n    content: \"\"\n  };\n\n  setPost = post => {\n    if (post && post.items.length) {\n      this.setState({\n        date: post.items[0].fields.date,\n        title: post.items[0].fields.title,\n        featuredImage: post.items[0].fields.featuredImage,\n        content: post.items[0].fields.content\n      });\n    }\n  };\n\n  componentDidMount() {\n    if (this.isBlogPostInProps()) {\n      this.setState({\n        date: this.props.location.date,\n        title: this.props.location.title,\n        featuredImage: this.props.location.featuredImage,\n        content: this.props.location.content\n      });\n    } else {\n      ContentfulUtil.fetchPostByPathName(this.props.match.params.blogPost)\n          .then((response) => this.setPost(response));\n    }\n  };\n\n  isBlogPostInProps = () => \n      this.props &&\n      this.props.location &&\n      this.props.location.date &&\n      this.props.location.title &&\n      this.props.location.featuredImage &&\n      this.props.location.content;\n\n\n  renderBlogPost = () => (\n    <>\n      <Link to=\"/blog\">Back to Blog</Link>\n      <p>\n        {moment(this.state.date).calendar(null, {\n          sameDay: '[Today]',\n          lastDay: '[Yesterday]',\n          lastWeek: '[Last] dddd',\n          sameElse: 'MMM Do YYYY'\n        })}\n      </p>\n      {this.state.featuredImage && <img className='featuredImage' src={this.state.featuredImage.fields.file.url + '?w=300&h=300'} alt={this.state.title} title={this.state.title}/>}\n      <h3>{this.state.title}</h3>\n      <Markdown source={this.state.content} />\n    </>\n  );\n\n  render = () => {\n    return this.renderBlogPost() ;\n  }\n}\n\nexport default BlogPost\n"]},"metadata":{},"sourceType":"module"}